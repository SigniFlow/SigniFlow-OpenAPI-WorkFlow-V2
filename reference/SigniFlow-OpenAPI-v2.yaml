openapi: 3.0.1
info:
  title: WorkFlow API V2
  version: v1
  description: SigniFlow eSignature Workflow creation API
  contact:
    name: SigniFlow Support
    url: 'https://www.signiflow.com/contact'
    email: support@signiflow.com
  termsOfService: 'https://www.signiflow.com/legal'
  license:
    name: Proprietary
    url: 'https://www.signiflow.com/legal'
paths:
  /Business/List:
    get:
      tags:
        - Business
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      operationId: ''
      description: Returns List of all Business Objects API Key has been granted access to.
      security:
        - x-api-key: []
      summary: Business List
  '/Business/{id}':
    get:
      tags:
        - Business
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Business'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Returns details for a specific Business ID
      security:
        - x-api-key: []
      summary: Business (ID)
  /Document/List:
    get:
      tags:
        - Document
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: |-
        Returns List of all Document Objects API Key has been granted access to.
        Limited to 1000 per request
        Supports ODATA Filters
        $filter=column eq 'value'
      security:
        - x-api-key: []
      summary: Document List
  '/Document/GetByUser/{ownerId}':
    get:
      tags:
        - Document
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: |-
        Returns List of all Document Objects owned by specified User
        Limited to 1000 per request
        Supports ODATA Filters
        $filter=column eq 'value'
      security:
        - x-api-key: []
      summary: Document GetByUser (OwenrID)
  '/Document/GetByBusiness/{businessId}':
    get:
      tags:
        - Document
      parameters:
        - name: businessId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: |-
        Returns List of all Document Objects owned by specified Business
        Limited to 1000 per request
        Supports ODATA Filters
        $filter=column eq 'value'
      security:
        - x-api-key: []
      summary: Document GetbyBusiness (BusinessID)
  '/Document/{id}':
    get:
      tags:
        - Document
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Returns details information of a Document.
      security:
        - x-api-key: []
      summary: Document (ID)
  '/Document/Download/{id}':
    get:
      tags:
        - Document
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: 'Download a document '
      security:
        - x-api-key: []
      summary: Document Download (ID)
  /Document:
    post:
      tags:
        - Document
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentCreateModel'
        description: ''
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Create new Document Workflow.
      security:
        - x-api-key: []
      summary: Document
  /Healthz:
    get:
      tags:
        - Healthz
      responses:
        '200':
          description: Success
      description: Health test endpoint
      security:
        - x-api-key: []
      summary: Healthz
  /Portfolio/List:
    get:
      tags:
        - Portfolio
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: |-
        Returns List of all Portfolio Objects API key has access to
        Limited to 1000 per request
        Supports ODATA Filters
        $filter=column eq 'value'
      security:
        - x-api-key: []
      summary: Portfolio List
      operationId: ''
  '/Portfolio/GetByUser/{ownerId}':
    get:
      tags:
        - Portfolio
      parameters:
        - name: ownerId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: |-
        Returns List of all Portfolio Objects owned by specified user
        Limited to 1000 per request
        Supports ODATA Filters
        $filter=column eq 'value'
      security:
        - x-api-key: []
      summary: Portfolio GetByUser (OwenrID)
  '/Portfolio/GetByBusiness/{businessId}':
    get:
      tags:
        - Portfolio
      parameters:
        - name: businessId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: |-
        Returns List of all Portfolio Objects owned by specified Business
        Limited to 1000 per request
        Supports ODATA Filters
        $filter=column eq 'value'
      security:
        - x-api-key: []
      summary: Portfolio GetByBusiness (BusinessID)
  '/Portfolio/{id}':
    get:
      tags:
        - Portfolio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Return Portfolio details.
      security:
        - x-api-key: []
      summary: Portfolio (ID)
  '/Portfolio/Download/{id}':
    get:
      tags:
        - Portfolio
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Download Portfolio.
      security:
        - x-api-key: []
      summary: Portfolio Download (ID)
  /Portfolio:
    post:
      tags:
        - Portfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioCreateModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Create documents to Portfolio Workflow.
      security:
        - x-api-key: []
      summary: Portfolio
    put:
      tags:
        - Portfolio
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PortfolioAddModel'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Add documents to Portfolio Workflow.
      summary: Portfolio
  /User/List:
    get:
      tags:
        - User
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Returns List of all User Objects API Key has been granted access to.
      security:
        - x-api-key: []
      summary: User List
  '/User/{id}':
    get:
      tags:
        - User
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Returns Details of specified User.
      security:
        - x-api-key: []
      summary: User (ID)
  '/User/GetByEmail/{email}':
    get:
      tags:
        - User
      parameters:
        - name: email
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Returns Details of specified User from email.
      security:
        - x-api-key: []
      summary: User GetByEmail (Email)
  '/User/GetByBusiness/{businessId}':
    get:
      tags:
        - User
      parameters:
        - name: businessId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      description: Returns List of all User Objects by Business ID.
      security:
        - x-api-key: []
      summary: User GetByBusiness (BusinessID)
components:
  schemas:
    ActionField:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
      description: |-
        #### This is the action taken by a user in a workflow on this step.

        `0 = SignDocument
        1 = ViewDocument
        2 = ApproveDocument`
      title: Action Field
      x-examples:
        Action Field Example:
          value: 0
    AutoExpire:
      enum:
        - 0
        - 1
      type: integer
      format: int32
      description: |-
        #### Sets an Auto Expire that will expire the document if not completed by the Due Date</p>

        `0 = No
        1 = Yes`
      title: Auto Expire
      x-examples:
        Auto Expire Example:
          value: 0
    AutoRemind:
      enum:
        - 0
        - 1
      type: integer
      format: int32
      description: |-
        #### Sets an Auto Reminder email to go out daily to workflow participants that have not signed the document

        `0 = No
        1 = Yes`
      title: Auto Remind
      x-examples:
        Auto Remind Example:
          value: 0
    DocExtension:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
      type: integer
      format: int32
      title: Document Extension
      description: |
        #### Document Extension 

        `
        0 = pdf
        1 = xls
        2 = txt
        3 = xlsx
        4 = docx
        5 = doc
        6 = xml
        7 = png
        8 = jpg
        9 = gif
        `
      x-examples:
        Document Extension Example:
          value: 0
    DocumentCreateModel:
      type: object
      additionalProperties: false
      title: Document Create Model
      description: '#### Create a document '
      properties:
        documentOwnerEmail:
          maxLength: 250
          type: string
          format: email
          description: '#### New document owner''s domain name.'
        documentName:
          maxLength: 250
          type: string
          description: '#### Document name.'
        document:
          type: string
          description: '#### New document in string format.'
        message:
          maxLength: 3000
          type: string
          description: '#### Message'
          nullable: true
        extension:
          $ref: '#/components/schemas/DocExtension'
        dueDate:
          type: string
          format: date-time
          description: '#### Document completion date.'
          nullable: true
        autoExpire:
          $ref: '#/components/schemas/AutoExpire'
        autoRemind:
          $ref: '#/components/schemas/AutoRemind'
        priority:
          $ref: '#/components/schemas/Priority'
        sendEmail:
          type: boolean
          description: '#### Whether or not an email will be sent on documentcreation. True/false.'
        participants:
          type: array
          description: '#### All refrences to the participants that will be linked to this document'
          items:
            $ref: '#/components/schemas/DocumentParticipantModel'
      required:
        - documentOwnerEmail
        - documentName
        - document
        - extension
        - autoExpire
        - autoRemind
        - priority
        - sendEmail
        - participants
      x-examples:
        Document Create Model Example:
          value:
            documentOwnerEmail: user@example.com
            documentName: Leave Application
            document: string
            message: This is a leave application
            extension: 0
            dueDate: '2019-08-24T14:15:22Z'
            autoExpire: 0
            autoRemind: 0
            priority: 0
            sendEmail: true
            participants:
              - action: 0
                mobile: 078 000 0000
                email: user@example.com
                firstName: John
                lastName: Doe
                languageCode: st
                proxyAllowed: 0
    DocumentParticipantModel:
      type: object
      additionalProperties: false
      title: Document Participant Model
      properties:
        action:
          $ref: '#/components/schemas/ActionField'
        mobile:
          maxLength: 15
          minLength: 0
          type: string
          description: '#### Participant mobile number.'
          nullable: true
        email:
          maxLength: 250
          type: string
          format: email
          description: '#### Participant email address.'
        firstName:
          maxLength: 350
          type: string
          description: '#### Participant first name.'
        lastName:
          maxLength: 250
          type: string
          description: '#### Participant last name.'
        languageCode:
          maxLength: 2
          type: string
          description: '#### Participant language code.'
        proxyAllowed:
          $ref: '#/components/schemas/ProxyAllowedField'
      required:
        - action
        - email
        - firstName
        - lastName
        - languageCode
        - proxyAllowed
      description: '#### Add document participants '
      x-examples:
        Document Participant Model Example:
          value:
            action: 0
            mobile: 078 000 0000
            email: user@example.com
            firstName: John
            lastName: Doe
            languageCode: st
            proxyAllowed: 0
    PortfolioAddModel:
      type: object
      additionalProperties: false
      title: Portfolio Add Model
      description: '#### Add a portfolio'
      properties:
        portfolioId:
          type: integer
          format: int32
          description: '#### Portfolio ID.'
        sendPortfolioNotifications:
          type: boolean
          description: '#### Whether or not to send a notification regarding the portfolio. True/false.'
          default: true
        documents:
          type: array
          description: '#### Documents that will be linked to this portfolio'
          items:
            $ref: '#/components/schemas/PortfolioDocumentCreateModel'
        participants:
          type: array
          description: '#### All refrences to the participants that will be linked to this document'
          items:
            $ref: '#/components/schemas/PortfolioParticipantModel'
      required:
        - portfolioId
        - sendPortfolioNotifications
        - documents
        - participants
      x-examples:
        Portfolio Add Model Example:
          value:
            portfolioId: -2147483648
            sendPortfolioNotifications: true
            documents:
              - documentOwnerEmail: user@example.com
                documentName: Leave Application
                document: string
                message: This is a leave application
                extension: 0
                dueDate: '2019-08-24T14:15:22Z'
                autoExpire: 0
                autoRemind: 0
                priority: 0
                sendEmail: true
                participantReference:
                  - string
            participants:
              - participantReference: string
                action: 0
                mobile: 078 000 0000
                email: user@example.com
                firstName: John
                lastName: Doe
                languageCode: st
                proxyAllowed: 0
    PortfolioCreateModel:
      type: object
      additionalProperties: false
      title: Portfolio Create Model
      description: '#### Create a portfolio'
      properties:
        portfolioOwnerEmail:
          maxLength: 250
          type: string
          format: email
          description: '#### Email address of the portfolio''s owner.'
        portfolioName:
          maxLength: 250
          type: string
          description: '#### Portfolio name.'
        sendPortfolioNotifications:
          type: boolean
          default: true
          description: '#### Whether or not to send a notification regarding the portfolio. True/false.'
        documents:
          type: array
          description: '#### Documents that will be linked to this portfolio'
          items:
            $ref: '#/components/schemas/PortfolioDocumentCreateModel'
        participants:
          type: array
          description: '#### All refrences to the participants that will be linked to this document'
          items:
            $ref: '#/components/schemas/PortfolioParticipantModel'
      required:
        - portfolioOwnerEmail
        - portfolioName
        - sendPortfolioNotifications
        - documents
        - participants
      x-examples:
        Portfolio Create Model Example:
          value:
            portfolioOwnerEmail: user@example.com
            portfolioName: string
            sendPortfolioNotifications: true
            documents:
              - documentOwnerEmail: user@example.com
                documentName: Leave Application
                document: string
                message: This is a leave application
                extension: 0
                dueDate: '2019-08-24T14:15:22Z'
                autoExpire: 0
                autoRemind: 0
                priority: 0
                sendEmail: true
                participantReference:
                  - string
            participants:
              - participantReference: string
                action: 0
                mobile: 078 000 0000
                email: user@example.com
                firstName: John
                lastName: Doe
                languageCode: st
                proxyAllowed: 0
    PortfolioDocumentCreateModel:
      type: object
      additionalProperties: false
      title: Portfolio Document Create Model
      description: '#### Create a document in a portfolio'
      properties:
        documentOwnerEmail:
          maxLength: 250
          type: string
          format: email
          description: '#### Document owmer/creator email address'
        documentName:
          maxLength: 250
          type: string
          description: '#### The name of the document'
        document:
          type: string
          description: '#### Document as a base64 string'
        message:
          maxLength: 3000
          type: string
          description: '#### A custom message that will be attatched to the document'
          nullable: true
        extension:
          $ref: '#/components/schemas/DocExtension'
        dueDate:
          type: string
          format: date-time
          description: '#### Document due date'
          nullable: true
        autoExpire:
          $ref: '#/components/schemas/AutoExpire'
        autoRemind:
          $ref: '#/components/schemas/AutoRemind'
        priority:
          $ref: '#/components/schemas/Priority'
        sendEmail:
          type: boolean
          description: '#### Whether or not an email will be sent on documentcreation. True/false.'
        participantReference:
          type: array
          description: '#### All refrences to the participants that will be linked to this document'
          items:
            type: string
      required:
        - documentOwnerEmail
        - documentName
        - document
        - extension
        - autoExpire
        - autoRemind
        - priority
        - sendEmail
        - participantReference
      x-examples:
        Portfolio Document Create Model Example:
          value:
            documentOwnerEmail: user@example.com
            documentName: Leave Application
            document: string
            message: This is a leave application
            extension: 0
            dueDate: '2019-08-24T14:15:22Z'
            autoExpire: 0
            autoRemind: 0
            priority: 0
            sendEmail: true
            participantReference:
              - string
    PortfolioParticipantModel:
      type: object
      additionalProperties: false
      title: Portfolio Participant Model
      description: '#### Participants in a portfolio'
      properties:
        participantReference:
          type: string
          description: '#### The refrence to each participant.'
        action:
          $ref: '#/components/schemas/ActionField'
        mobile:
          type: string
          description: '#### Participant mobile number.'
        email:
          type: string
          description: '#### Participant email address.'
        firstName:
          type: string
          description: '#### Participant first name.'
        lastName:
          type: string
          description: '#### Participant last name.'
        languageCode:
          type: string
          description: '#### Participant language code.'
        proxyAllowed:
          $ref: '#/components/schemas/ProxyAllowedField'
      required:
        - participantReference
        - action
        - mobile
        - email
        - firstName
        - lastName
        - languageCode
        - proxyAllowed
      x-examples:
        Portfolio Participant Model Example:
          value:
            participantReference: string
            action: 0
            mobile: 078 000 0000
            email: user@example.com
            firstName: John
            lastName: Doe
            languageCode: st
            proxyAllowed: 0
    Priority:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
      description: |-
        #### Priority of the workflow. 

        `0 = Low
        1 = Normal
        2 = High`
      title: Priority
      x-examples:
        Priority Example:
          value: 1
    ProblemDetails:
      type: object
      additionalProperties: {}
      title: Problem Details
      description: '#### Details of a problem that was experienced '
      properties:
        type:
          type: string
          description: '#### The type of problem that has been experienced.'
          nullable: true
        title:
          type: string
          description: '#### The title of the problem.'
          nullable: true
        status:
          type: integer
          format: int32
          description: '#### The status of the problem.'
          nullable: true
        detail:
          type: string
          description: '#### The details of the problem that was/is being experienced.'
          nullable: true
        instance:
          type: string
          description: '#### The instance of the problem (?).'
          nullable: true
      x-examples:
        Problem Details Example:
          value:
            type: Login Issue
            title: Unable to Login
            status: -2147483648
            detail: The user is unable to login even after resetting their password
            instance: Error
            property1: null
            property2: null
    ProxyAllowedField:
      enum:
        - 0
        - 1
      type: integer
      format: int32
      title: Proxy Allowed Field
      description: |-
        #### Determines whether or not a proxy is allowed.

        `0 = No
        1 = Yes`
      x-examples:
        Proxy Allowed Field Example:
          value: 1
    Business:
      description: '#### Business Model'
      type: object
      x-examples:
        Business Example:
          value:
            id: 0
            name: John
            registrationNumber: '983747376298276387182'
            taxNumber: '1872617631'
            addressLine1: Johannesburg
            addressLine2: Kyalami
            addressLine3: Dove Drive
            addressLine4: 27 Hare street
            country: South Africa
            industry: Manufacturing
      properties:
        id:
          type: number
        name:
          type: string
          minLength: 1
          description: Business name.
        registrationNumber:
          type: string
          minLength: 1
          description: Business registration number.
        taxNumber:
          type: string
          minLength: 1
          description: Business tax number.
        addressLine1:
          type: string
          minLength: 1
          description: Business address 1st line.
        addressLine2:
          type: string
          minLength: 1
          description: Business address 2nd line.
        addressLine3:
          type: string
          minLength: 1
          description: Business address 3de line.
        addressLine4:
          type: string
          minLength: 1
          description: Business address 4th line.
        country:
          type: string
          minLength: 1
          description: The country where the business is located.
        industry:
          type: string
          minLength: 1
          description: The industry that the business is in.
      required:
        - id
        - name
        - registrationNumber
        - taxNumber
        - addressLine1
        - addressLine2
        - addressLine3
        - addressLine4
        - country
        - industry
      title: Business
  securitySchemes:
    x-api-key:
      name: X-API-Key
      type: apiKey
      in: header
      description: SigniFlow API Key
  responses:
    Business:
      description: Example response
      content:
        application/json:
          schema:
            description: ''
            type: object
            x-examples:
              example-1:
                id: 2
                name: PBSA (Pty) Limited
                registrationNumber: 1998/008782/07
                taxNumber: '4080190525'
                addressLine1: 'Unit 9. Kayalami Crescent, Kayalami Boulevard'
                addressLine2: Kayalami Business Park
                addressLine3: Johannesburg
                addressLine4: '1684'
                country: South Africa
                industry: Technology
            properties:
              id:
                type: number
              name:
                type: string
                minLength: 1
                description: Business name.
              registrationNumber:
                type: string
                minLength: 1
                description: Business registration number.
              taxNumber:
                type: string
                minLength: 1
                description: Business tax number.
              addressLine1:
                type: string
                minLength: 1
                description: Business address 1st line.
              addressLine2:
                type: string
                minLength: 1
                description: Business address 2nd line.
              addressLine3:
                type: string
                minLength: 1
                description: Business address 3de line.
              addressLine4:
                type: string
                minLength: 1
                description: Business address 4th line.
              country:
                type: string
                minLength: 1
                description: The country where the business is located.
              industry:
                type: string
                minLength: 1
                description: The industry that the business is in.
            required:
              - id
              - name
              - registrationNumber
              - taxNumber
              - addressLine1
              - addressLine2
              - addressLine3
              - addressLine4
              - country
              - industry
          examples:
            example-1:
              value:
                id: 0
                name: string
                registrationNumber: string
                taxNumber: string
                addressLine1: string
                addressLine2: string
                addressLine3: string
                addressLine4: string
                country: string
                industry: string
servers:
  - url: 'https://preprod.signiflow.com/OpenApi'
    description: Pre-Production
